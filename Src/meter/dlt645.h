#ifndef _DLT645_H_
#define _DLT645_H_
/*       DLT645 ??????         */

#define ENERGY_FORWARDA  0    /*???????*/
#define ENERGY_BACKWARDA 1    /*???????*/
#define VOLTAGE          2    /*??*/
#define CURRENT          3    /*??*/
#define POWER_ACT        4    /*???????*/
#define POWER_REACT      5    /*???????*/
#define FACTOR           6    /*?????*/
#define FREQUENCY        7    /*????*/

#define LOADRECORD       8    /*????*/

#define COMBINA_REACT_1  9    /*????1???*/
#define COMBINA_REACT_2  10   /*????2???*/
#define QUADRANT_REACT_1 11   /*?????????*/
#define QUADRANT_REACT_2 12   /*?????????*/
#define QUADRANT_REACT_3 13   /*?????????*/
#define QUADRANT_REACT_4 14   /*?????????*/

#define DEMAND_ACT       15   /*??????*/
#define DEMAND_REACT     16   /*??????*/



/*       DLT645 ???         */

#define DLT645_START  0    /*????*/
#define DLT645_ADDR 1     /*???*/
#define DLT645_DSTART 7   /*?????*/
#define DLT645_CTRL 8      /*????*/
#define DLT645_DLEN 9	       /*?????*/
#define DLT645_DATA 10         /*???*/
#define DLT645_CS            /*???*/
#define DLT645_END           /*????*/


/*       DLT645 ???         */

#define DLT645_FRAME_START  0x68
#define DLT645_FRAME_END  0x16
#define DLT645_FRAME_READ_DATA 0x11
#define DLT645_C_OK	0x91
#define DLT645_C_ERRO 0xd1
#define DLT645_DATA_OFFSET 0x33

int dlt645_collect_meter(uint8_t *meter_id,uint8_t dlt645[],uint16_t type);

#endif

